{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":3507350,"sourceType":"datasetVersion","datasetId":2104038}],"dockerImageVersionId":30733,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-01T16:42:35.052051Z","iopub.execute_input":"2024-07-01T16:42:35.052419Z","iopub.status.idle":"2024-07-01T16:42:35.058928Z","shell.execute_reply.started":"2024-07-01T16:42:35.052383Z","shell.execute_reply":"2024-07-01T16:42:35.057897Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Lyrics Based Song Reccomendation Using Transformers and Vector Database\n\nIn this project we perform the following:\n\nfirst we load up the lyrics to over 5 million songs\n\nthen we using transformers, chunk and enode lyrics\n\nafterward swe set up vector databases \n\n\nand using cosine similarity we retrive  similar songs based lyrics similarity","metadata":{}},{"cell_type":"code","source":"#read in 1 million rows\nimport pandas as pd\n\nchunksize = 1000000\nfor chunk in pd.read_csv('/kaggle/input/5-million-song-lyrics-dataset/ds2.csv', chunksize=chunksize):\n    df = chunk\n    break","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:25:26.677284Z","iopub.execute_input":"2024-07-14T01:25:26.677674Z","iopub.status.idle":"2024-07-14T01:26:13.777368Z","shell.execute_reply.started":"2024-07-14T01:25:26.677644Z","shell.execute_reply":"2024-07-14T01:26:13.776468Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#frst lets sample from the 5 million dataset\ndf['tag'].value_counts()\ngenres = df['tag'].value_counts().index","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:19.478822Z","iopub.execute_input":"2024-07-14T01:26:19.479607Z","iopub.status.idle":"2024-07-14T01:26:19.794552Z","shell.execute_reply.started":"2024-07-14T01:26:19.479576Z","shell.execute_reply":"2024-07-14T01:26:19.793339Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"genres = list(genres)\n##sample 10000 rows per tag and append to df_list to concat and shuffle\ndf_list = []\nfor genre in genres:\n    df_tag = df[df['tag'] == genre].sample(50)\n    df_list.append(df_tag)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:26.697298Z","iopub.execute_input":"2024-07-14T01:26:26.697643Z","iopub.status.idle":"2024-07-14T01:26:27.866778Z","shell.execute_reply.started":"2024-07-14T01:26:26.697613Z","shell.execute_reply":"2024-07-14T01:26:27.865739Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df = pd.concat(df_list)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:27.868815Z","iopub.execute_input":"2024-07-14T01:26:27.869363Z","iopub.status.idle":"2024-07-14T01:26:27.875322Z","shell.execute_reply.started":"2024-07-14T01:26:27.869328Z","shell.execute_reply":"2024-07-14T01:26:27.874445Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['tag'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:27.876461Z","iopub.execute_input":"2024-07-14T01:26:27.876799Z","iopub.status.idle":"2024-07-14T01:26:27.886819Z","shell.execute_reply.started":"2024-07-14T01:26:27.876760Z","shell.execute_reply":"2024-07-14T01:26:27.885641Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#instaling langchain\n!pip install langchain_community","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:32.348470Z","iopub.execute_input":"2024-07-14T01:26:32.348851Z","iopub.status.idle":"2024-07-14T01:26:52.814846Z","shell.execute_reply.started":"2024-07-14T01:26:32.348821Z","shell.execute_reply":"2024-07-14T01:26:52.813853Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#using the dataframe loaders\nfrom langchain_community.document_loaders import DataFrameLoader","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:52.817157Z","iopub.execute_input":"2024-07-14T01:26:52.818180Z","iopub.status.idle":"2024-07-14T01:26:53.297092Z","shell.execute_reply.started":"2024-07-14T01:26:52.818144Z","shell.execute_reply":"2024-07-14T01:26:53.296236Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#loading documents from dataframes\nloader = DataFrameLoader(df,'lyrics')","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:26:53.298271Z","iopub.execute_input":"2024-07-14T01:26:53.298714Z","iopub.status.idle":"2024-07-14T01:26:53.302996Z","shell.execute_reply.started":"2024-07-14T01:26:53.298687Z","shell.execute_reply":"2024-07-14T01:26:53.302051Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"docs = loader.load()","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:27:50.215002Z","iopub.execute_input":"2024-07-14T01:27:50.215368Z","iopub.status.idle":"2024-07-14T01:27:50.260719Z","shell.execute_reply.started":"2024-07-14T01:27:50.215339Z","shell.execute_reply":"2024-07-14T01:27:50.259812Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Split into chunks before encoding\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size = 1024,\n    chunk_overlap = 128\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:28:07.512838Z","iopub.execute_input":"2024-07-14T01:28:07.513721Z","iopub.status.idle":"2024-07-14T01:28:07.526378Z","shell.execute_reply.started":"2024-07-14T01:28:07.513689Z","shell.execute_reply":"2024-07-14T01:28:07.525532Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"splits = text_splitter.split_documents(docs)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:28:13.217807Z","iopub.execute_input":"2024-07-14T01:28:13.218425Z","iopub.status.idle":"2024-07-14T01:28:13.308429Z","shell.execute_reply.started":"2024-07-14T01:28:13.218395Z","shell.execute_reply":"2024-07-14T01:28:13.307753Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#installing the transformers library\n!pip install sentence_transformers","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:28:15.837743Z","iopub.execute_input":"2024-07-14T01:28:15.838071Z","iopub.status.idle":"2024-07-14T01:28:29.290954Z","shell.execute_reply.started":"2024-07-14T01:28:15.838046Z","shell.execute_reply":"2024-07-14T01:28:29.289763Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#importing, loading models and testing out the transformer\nfrom sentence_transformers import SentenceTransformer\nfrom sentence_transformers.util import cos_sim\n\nsentences = ['That is a happy person', 'That is a very happy person']\n\nmodel = SentenceTransformer('thenlper/gte-large')\nembeddings = model.encode(sentences)\nprint(cos_sim(embeddings[0], embeddings[1]))","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:30:00.838354Z","iopub.execute_input":"2024-07-14T01:30:00.839518Z","iopub.status.idle":"2024-07-14T01:30:02.497388Z","shell.execute_reply.started":"2024-07-14T01:30:00.839474Z","shell.execute_reply":"2024-07-14T01:30:02.496275Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#setting up the vector database\n!pip install chromadb\nfrom langchain.vectorstores import Chroma\nfrom langchain_community.embeddings.sentence_transformer import (\n    SentenceTransformerEmbeddings,\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:30:13.946545Z","iopub.execute_input":"2024-07-14T01:30:13.947283Z","iopub.status.idle":"2024-07-14T01:30:52.855952Z","shell.execute_reply.started":"2024-07-14T01:30:13.947251Z","shell.execute_reply":"2024-07-14T01:30:52.855033Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"persist_directory = 'docs/chroma/'\n!rm -rf ./docs/chroma","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:30:52.858184Z","iopub.execute_input":"2024-07-14T01:30:52.858570Z","iopub.status.idle":"2024-07-14T01:30:53.994529Z","shell.execute_reply.started":"2024-07-14T01:30:52.858520Z","shell.execute_reply":"2024-07-14T01:30:53.993235Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# create the open-source embedding function\nembedding_function = SentenceTransformerEmbeddings(model_name=\"thenlper/gte-large\")\nvectordb = Chroma.from_documents(\n    documents=splits,\n    embedding=embedding_function,\n    persist_directory=persist_directory\n)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:31:28.359928Z","iopub.execute_input":"2024-07-14T01:31:28.360332Z","iopub.status.idle":"2024-07-14T01:32:29.245224Z","shell.execute_reply.started":"2024-07-14T01:31:28.360296Z","shell.execute_reply":"2024-07-14T01:32:29.244294Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"###testing the system\n#first get a song, all lyrics\n#parse it into db and get results\nsong = df.sample(5)\nsong","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:32:53.185407Z","iopub.execute_input":"2024-07-14T01:32:53.185790Z","iopub.status.idle":"2024-07-14T01:32:53.200270Z","shell.execute_reply.started":"2024-07-14T01:32:53.185760Z","shell.execute_reply":"2024-07-14T01:32:53.199099Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"song_details = song.loc[[42437]]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:33:04.470032Z","iopub.execute_input":"2024-07-14T01:33:04.470688Z","iopub.status.idle":"2024-07-14T01:33:04.477281Z","shell.execute_reply.started":"2024-07-14T01:33:04.470655Z","shell.execute_reply":"2024-07-14T01:33:04.476129Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#i just selected a song from my dataframe\nsong_details","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:33:06.225155Z","iopub.execute_input":"2024-07-14T01:33:06.226164Z","iopub.status.idle":"2024-07-14T01:33:06.238068Z","shell.execute_reply.started":"2024-07-14T01:33:06.226129Z","shell.execute_reply":"2024-07-14T01:33:06.237096Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"song_lyrics = song_details['lyrics'].values[0]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:33:08.867805Z","iopub.execute_input":"2024-07-14T01:33:08.868417Z","iopub.status.idle":"2024-07-14T01:33:08.872744Z","shell.execute_reply.started":"2024-07-14T01:33:08.868383Z","shell.execute_reply":"2024-07-14T01:33:08.871808Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#next up i will use the song lyrics to query my vector database for the most similar set of songs based off lyrics\nsong_lyrics","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:33:10.178970Z","iopub.execute_input":"2024-07-14T01:33:10.179325Z","iopub.status.idle":"2024-07-14T01:33:10.187080Z","shell.execute_reply.started":"2024-07-14T01:33:10.179299Z","shell.execute_reply":"2024-07-14T01:33:10.186120Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#get the 3 most similar results\nquestion = song_lyrics\n\nresult_docs = vectordb.similarity_search(question,k=3)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:56:57.086011Z","iopub.execute_input":"2024-07-14T01:56:57.086677Z","iopub.status.idle":"2024-07-14T01:56:57.265885Z","shell.execute_reply.started":"2024-07-14T01:56:57.086643Z","shell.execute_reply":"2024-07-14T01:56:57.264969Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"[[i.metadata['title'],i.metadata['artist']] for i in result_docs]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:57:00.657360Z","iopub.execute_input":"2024-07-14T01:57:00.658221Z","iopub.status.idle":"2024-07-14T01:57:00.664435Z","shell.execute_reply.started":"2024-07-14T01:57:00.658186Z","shell.execute_reply":"2024-07-14T01:57:00.663559Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#using the max marginal relevance search\ndocs_mmr = vectordb.max_marginal_relevance_search(question,k=10,fetch_k = 15)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:57:08.014119Z","iopub.execute_input":"2024-07-14T01:57:08.014855Z","iopub.status.idle":"2024-07-14T01:57:08.225792Z","shell.execute_reply.started":"2024-07-14T01:57:08.014825Z","shell.execute_reply":"2024-07-14T01:57:08.224447Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"[i.metadata for i in docs_mmr]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T01:57:08.234102Z","iopub.execute_input":"2024-07-14T01:57:08.235234Z","iopub.status.idle":"2024-07-14T01:57:08.247881Z","shell.execute_reply.started":"2024-07-14T01:57:08.235188Z","shell.execute_reply":"2024-07-14T01:57:08.246696Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"####to build the entire system:\n#we would need to process all songs\n#iteratively load up dataframe\n\n##load lyrics as document\n##if vector database exist:\n##add documents\n##else\n##create database\n\n\n##i want to save the database to a more permanent storage","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"persist_directory = 'docs/chroma_test10000'\n!rm -rf ./docs/chroma_test10000\nvectordb = None\n####to build the entire system:\n#we would need to process all songs\n#iteratively load up dataframe\nchunksize = 1000\ni = 0\nfor chunk in pd.read_csv('/kaggle/input/5-million-song-lyrics-dataset/ds2.csv', chunksize=chunksize):\n    i+=1\n    print(i)\n    df = chunk\n    ##load lyrics as document\n    loader = DataFrameLoader(df,'lyrics')\n    docs = loader.load()\n    splits = text_splitter.split_documents(docs)\n    if vectordb:\n        print('adding documents')\n        #if vector db already exists add more documents\n        vectordb.add_documents(documents = splits)\n    else:\n        #create vector database from documents\n        print('creating database')\n        vectordb = Chroma.from_documents(\n        documents=splits,\n        embedding=embedding_function,\n        persist_directory=persist_directory\n            )\n    print(len(vectordb.get()['ids']))\n    if i == 10:\n        break\n\n##i want to save the database to a more permanent storage\n","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:13:49.039505Z","iopub.execute_input":"2024-07-14T02:13:49.040450Z","iopub.status.idle":"2024-07-14T02:53:33.849013Z","shell.execute_reply.started":"2024-07-14T02:13:49.040411Z","shell.execute_reply":"2024-07-14T02:53:33.848051Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(vectordb.get()['ids'])","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:53:55.031597Z","iopub.execute_input":"2024-07-14T02:53:55.032033Z","iopub.status.idle":"2024-07-14T02:53:57.359849Z","shell.execute_reply.started":"2024-07-14T02:53:55.031995Z","shell.execute_reply":"2024-07-14T02:53:57.358912Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"titles = [i['title'] for i in vectordb.get()['metadatas']]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:01.173054Z","iopub.execute_input":"2024-07-14T02:54:01.173437Z","iopub.status.idle":"2024-07-14T02:54:03.538657Z","shell.execute_reply.started":"2024-07-14T02:54:01.173407Z","shell.execute_reply":"2024-07-14T02:54:03.537676Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"titles.sort()","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:05.003072Z","iopub.execute_input":"2024-07-14T02:54:05.004003Z","iopub.status.idle":"2024-07-14T02:54:05.044223Z","shell.execute_reply.started":"2024-07-14T02:54:05.003970Z","shell.execute_reply":"2024-07-14T02:54:05.043240Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"titles_set  = set(titles)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:06.488005Z","iopub.execute_input":"2024-07-14T02:54:06.488395Z","iopub.status.idle":"2024-07-14T02:54:06.503588Z","shell.execute_reply.started":"2024-07-14T02:54:06.488367Z","shell.execute_reply":"2024-07-14T02:54:06.502622Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(titles)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:07.792920Z","iopub.execute_input":"2024-07-14T02:54:07.793281Z","iopub.status.idle":"2024-07-14T02:54:07.799181Z","shell.execute_reply.started":"2024-07-14T02:54:07.793252Z","shell.execute_reply":"2024-07-14T02:54:07.798230Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(titles_set)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:08.737806Z","iopub.execute_input":"2024-07-14T02:54:08.738196Z","iopub.status.idle":"2024-07-14T02:54:08.743974Z","shell.execute_reply.started":"2024-07-14T02:54:08.738167Z","shell.execute_reply":"2024-07-14T02:54:08.743139Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"metadata = vectordb.get()['metadatas']","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:54:57.545914Z","iopub.execute_input":"2024-07-14T02:54:57.546264Z","iopub.status.idle":"2024-07-14T02:54:59.826631Z","shell.execute_reply.started":"2024-07-14T02:54:57.546237Z","shell.execute_reply":"2024-07-14T02:54:59.825651Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from collections import Counter\n\ntags = [i['tag'] for i in metadata]\n\ntag_counter = Counter(tags)\n\n# Print the counts\nprint(tag_counter)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:56:40.256487Z","iopub.execute_input":"2024-07-14T02:56:40.256932Z","iopub.status.idle":"2024-07-14T02:56:40.285130Z","shell.execute_reply.started":"2024-07-14T02:56:40.256895Z","shell.execute_reply":"2024-07-14T02:56:40.283910Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pd.DataFrame(metadata)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T02:59:02.182915Z","iopub.execute_input":"2024-07-14T02:59:02.183724Z","iopub.status.idle":"2024-07-14T02:59:02.363324Z","shell.execute_reply.started":"2024-07-14T02:59:02.183692Z","shell.execute_reply":"2024-07-14T02:59:02.362342Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ids = vectordb.get()['ids']","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:00:58.470063Z","iopub.execute_input":"2024-07-14T03:00:58.470697Z","iopub.status.idle":"2024-07-14T03:01:01.165646Z","shell.execute_reply.started":"2024-07-14T03:00:58.470668Z","shell.execute_reply":"2024-07-14T03:01:01.164768Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"ids","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:01:01.973444Z","iopub.execute_input":"2024-07-14T03:01:01.973916Z","iopub.status.idle":"2024-07-14T03:01:02.005576Z","shell.execute_reply.started":"2024-07-14T03:01:01.973874Z","shell.execute_reply":"2024-07-14T03:01:02.004394Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"lyrics = vectordb.get(['00061fb2-b7ea-4610-9f13-7c56a38800ce'])['documents'][0]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:03:05.273818Z","iopub.execute_input":"2024-07-14T03:03:05.274625Z","iopub.status.idle":"2024-07-14T03:03:05.280531Z","shell.execute_reply.started":"2024-07-14T03:03:05.274596Z","shell.execute_reply":"2024-07-14T03:03:05.279643Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"lyrics","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:03:11.231186Z","iopub.execute_input":"2024-07-14T03:03:11.231884Z","iopub.status.idle":"2024-07-14T03:03:11.237937Z","shell.execute_reply.started":"2024-07-14T03:03:11.231840Z","shell.execute_reply":"2024-07-14T03:03:11.236975Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"docs_mmr = vectordb.max_marginal_relevance_search(\"i need rap song for a party\",k=10,fetch_k = 15)\n[i.metadata for i in docs_mmr]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:19:24.466166Z","iopub.execute_input":"2024-07-14T03:19:24.466797Z","iopub.status.idle":"2024-07-14T03:19:24.558793Z","shell.execute_reply.started":"2024-07-14T03:19:24.466764Z","shell.execute_reply":"2024-07-14T03:19:24.557651Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"docs_mmr = vectordb.max_marginal_relevance_search(lyrics,k=10,fetch_k = 15)\n[i.metadata for i in docs_mmr]","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:05:33.893627Z","iopub.execute_input":"2024-07-14T03:05:33.894100Z","iopub.status.idle":"2024-07-14T03:05:33.903040Z","shell.execute_reply.started":"2024-07-14T03:05:33.894066Z","shell.execute_reply":"2024-07-14T03:05:33.901922Z"},"collapsed":true,"jupyter":{"outputs_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"##lets create a drop down mmenu\n###that takes in artist name  and allows you to select a song for reccomnedation\nmusic_data = pd.DataFrame(metadata)","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:22:21.936373Z","iopub.execute_input":"2024-07-14T03:22:21.937216Z","iopub.status.idle":"2024-07-14T03:22:22.112464Z","shell.execute_reply.started":"2024-07-14T03:22:21.937182Z","shell.execute_reply":"2024-07-14T03:22:22.111679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"music_data = music_data.drop_duplicates()","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:23:13.155638Z","iopub.execute_input":"2024-07-14T03:23:13.156113Z","iopub.status.idle":"2024-07-14T03:23:13.210683Z","shell.execute_reply.started":"2024-07-14T03:23:13.156080Z","shell.execute_reply":"2024-07-14T03:23:13.209905Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"artist_list = music_data['artist'].values\nartist_list = list(set(artist_list))","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:24:23.596852Z","iopub.execute_input":"2024-07-14T03:24:23.597222Z","iopub.status.idle":"2024-07-14T03:24:23.601798Z","shell.execute_reply.started":"2024-07-14T03:24:23.597194Z","shell.execute_reply":"2024-07-14T03:24:23.600833Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"artist_list\n","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:36:22.460267Z","iopub.execute_input":"2024-07-14T03:36:22.461110Z","iopub.status.idle":"2024-07-14T03:36:22.464964Z","shell.execute_reply.started":"2024-07-14T03:36:22.461078Z","shell.execute_reply":"2024-07-14T03:36:22.463888Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"vectorstore = Chroma(persist_directory=persist_directory )","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:48:04.749132Z","iopub.execute_input":"2024-07-14T03:48:04.749874Z","iopub.status.idle":"2024-07-14T03:48:04.760567Z","shell.execute_reply.started":"2024-07-14T03:48:04.749830Z","shell.execute_reply":"2024-07-14T03:48:04.759605Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"len(vectorstore.get()['ids'])","metadata":{"execution":{"iopub.status.busy":"2024-07-14T03:48:28.169951Z","iopub.execute_input":"2024-07-14T03:48:28.170636Z","iopub.status.idle":"2024-07-14T03:48:30.541799Z","shell.execute_reply.started":"2024-07-14T03:48:28.170604Z","shell.execute_reply":"2024-07-14T03:48:30.540832Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Zip the folder\n!zip -r /kaggle/working/chroma_test10000.zip /kaggle/working/docs/chroma_test10000\n\n# Verify that the zip file was created\n!ls /kaggle/working/chroma_test10000.zip\n","metadata":{"execution":{"iopub.status.busy":"2024-07-14T04:48:32.183091Z","iopub.execute_input":"2024-07-14T04:48:32.184092Z","iopub.status.idle":"2024-07-14T04:49:08.891104Z","shell.execute_reply.started":"2024-07-14T04:48:32.184052Z","shell.execute_reply":"2024-07-14T04:49:08.889911Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from IPython.display import FileLink\nFileLink(r'/kaggle/working/chroma_test10000.zip')","metadata":{"execution":{"iopub.status.busy":"2024-07-14T04:53:53.200562Z","iopub.execute_input":"2024-07-14T04:53:53.201220Z","iopub.status.idle":"2024-07-14T04:53:53.207706Z","shell.execute_reply.started":"2024-07-14T04:53:53.201185Z","shell.execute_reply":"2024-07-14T04:53:53.206737Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}